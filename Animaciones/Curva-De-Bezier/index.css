body {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100vh;
  color: white;
  font-family: Arial;
}

.container {
  border: 1px solid red;
  border-radius: 5px;
  width: 100%;
}

.container:hover .cuadrado{ /* se lee asi: cuando le haga hover al container quiero que mi cuadrado se rote y etc etc */
  animation-play-state: paused; /*con esto hago que se pause la animacion, con running hago que corra en caso de estar pausada en una primera instancia*/
}

.cuadrado {
  width: 150px;
  height: 150px;
  background-color: #7dc900;
  margin: 40px;
  border-radius: 5px;
  display: flex;
  justify-content: center;
  align-items: center;
  animation-name: cuadrado; /*nombre de la animacion*/
  animation-duration: 2s;/*tiempo que quiero que dure la animacion*/
  animation-iteration-count: infinite; /*cantidad de veces que quiero que se repita mi animacion*/
  /* animation-timing-function: ease; tiene una aceleracion de la animacion cambiando la velocidad de la misma en diferentes instantes de tiempo */
  /*animation-timing-function: ease-in;  hace que la aceleracion de la animacion al inicio sea mas lenta */
  /*animation-timing-function: ease-out;  hace que la aceleracion de la animacion al final sea mas lenta */
  /*animation-timing-function: ease-in-out;  hace que la aceleracion de la animacion al inicio y al final sea mas lenta */
  /*animation-timing-function: linear;  hace que la aceleracion de la animacion sea nula, por lo tanto la velocidad es constante */
  animation-timing-function: steps(120); /*en steps pongo cuantos frames entren en los dos segundos (en este caso) que tiene la animacion*/
  animation-direction: alternate;
  border-radius: 50%;
  position: relative;
}

@keyframes cuadrado {
  0% { /*se lee: en el instante de tiempo cero quiero que tenga opacidad (en este caso)*/
    left: 0;
  }
  100% { /*se lee: en el Ãºltimo instante de tiempo quiero que no tenga opacidad*/
    left: calc(100% - 230px);
  }

}
